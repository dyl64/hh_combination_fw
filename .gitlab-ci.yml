stages:
  - build
  - process
  - combine
  - plotting
  - download

image: atlasadc/atlas-grid-centos7

hhCompile:
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    GIT_SSL_NO_VERIFY: "true"
  script:
    - set +e
    - shopt -s expand_aliases
    - export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase
    - alias setupATLAS='source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh'
    - base_path=$(pwd)
    - cd submodules/workspaceCombiner; git status
    - git apply --whitespace=nowarn ../../workspaceCombiner.patch
    - git status
    - cd $base_path
    - source compile.sh
    - source setup.sh
  artifacts:
    paths:
      - submodules
      - python_modules
      - scripts
      - setup.sh

.process_channel:
  stage: process
  needs:
    - job: hhCompile
  variables:
    GIT_SSL_NO_VERIFY: "true"
    output_dir: output
    input_dir: input
  before_script:
    - set +e
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - eval "$(ssh-agent -s)"
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - echo "lxplus.cern.ch, ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPZvfRF+9L7TR3FRPyLFdcsXSZ6RQYJHfOjzzWB94sX0gP34Cgij9p4ukL900sVVvw3LPM5OxxFSNIXGztFYu4o=" > ~/.ssh/known_hosts
    - echo -e "Host *\n\tGSSAPIDelegateCredentials yes\n\tGSSAPITrustDNS yes\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - echo $SERVICE_PASS | kinit -f $CERN_USER || echo something
    - mkdir -p $input_dir/$version
    - scp -r -i ~/.ssh/id_rsa ${CERN_USER}@lxplus.cern.ch:/afs/cern.ch/work/z/zhangr/HHcomb/hh_combination_fw/input/$version/* $input_dir/$version/
    - ls $input_dir/$version/*/nonres/0.root
    - shopt -s expand_aliases
    - export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase
    - alias setupATLAS='source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh'
    - echo $input_dir/$version
    - source setup.sh || echo ignore setupATLAS return code
  artifacts:
    paths:
      - $output_dir

.NRProcess:
  extends: .process_channel
  script:
    - HHComb process_channels --new_method -i $input_dir/$version -c $channel -r nonres -o $output_dir --minimizer_options configs/minimizer_options_robust.json --config configs/regularization_nonres_v3.yaml

NR_blind_pro:
  extends: .NRProcess
  variables:
    channel: bbbb,bbll,bbVV,WWWW
    version: 20210531

NR_unblind_pro:
  extends: .NRProcess
  variables:
    channel: bbyy,bbtautau
    version: 20210531

#.Sp0Process:
#  extends: .process_channel
#  script:
#    - HHComb process_channels --new_method -i $input_dir/$version -c $channel -r spin0 -o $output_dir --minimizer_options configs/minimizer_options_robust.json --config configs/regularization_spin0_v3.yaml --unblind
#
#Sp0_bb_pro:
#  extends: .Sp0Process
#  variables:
#    channel: bbbb
#    version: 20210531
#
#Sp0_tt_pro:
#  extends: .Sp0Process
#  variables:
#    channel: bbtautau
#    version: 20210531
#
#Sp0_yy_pro:
#  extends: .Sp0Process
#  variables:
#    channel: bbyy
#    version: 20210531

.combine_ws:
  stage: combine
  variables:
    GIT_SSL_NO_VERIFY: "true"
    output_dir: output
  before_script:
    - set +e
    - shopt -s expand_aliases
    - export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase
    - alias setupATLAS='source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh'
    - source setup.sh || echo ignore setupATLAS return code
  artifacts:
    paths:
      - $output_dir

.NRCombine_ws:
  extends: .combine_ws
  needs:
    - job: hhCompile
    - job: NR_blind_pro
    - job: NR_unblind_pro
  script:
    - HHComb combine_ws --new_method -i $output_dir -c $channels -r nonres

NR_bb_tt_yy_com:
  extends: .NRCombine_ws
  variables:
    channels: bbbb,bbtautau,bbyy

NR_all_com:
  extends: .NRCombine_ws
  variables:
    channels: bbbb,bbtautau,bbyy,bbll,bbVV,WWWW

#.Sp0Combine_ws:
#  extends: .combine_ws
#  script:
#    - HHComb combine_ws --new_method -i $output_dir -r spin0 -c $channels --unblind -m $masspoints
#
#Sp0_yy_tt_com:
#  extends: .Sp0Combine_ws
#  needs:
#    - job: hhCompile
#    - job: Sp0_yy_pro
#    - job: Sp0_tt_pro
#  variables:
#    channels: bbyy,bbtautau
#    masspoints: "325,350,450,550"
#
#Sp0_bb_tt_com:
#  extends: .Sp0Combine_ws
#  needs:
#    - job: hhCompile
#    - job: Sp0_bb_pro
#    - job: Sp0_tt_pro
#  variables:
#    channels: bbbb,bbtautau
#    masspoints: "251,260,280,300,400,500,600,700,800,900,1000,1100,1200,1400,1600"
#
#Sp0_bb_tt_yy_com:
#  extends: .Sp0Combine_ws
#  needs:
#    - job: hhCompile
#    - job: Sp0_bb_pro
#    - job: Sp0_tt_pro
#    - job: Sp0_yy_pro
#  variables:
#    channels: bbbb,bbtautau,bbyy
#    masspoints: "251,260,280,300,400,500,600,700,800,900,1000"

.plot:
  stage: plotting
  variables:
    GIT_SSL_NO_VERIFY: "true"
    input_dir: output
    output_dir: figures
  before_script:
    - set +e
    - shopt -s expand_aliases
    - export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase
    - alias setupATLAS='source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh'
    - source setup.sh || echo ignore setupATLAS return code
#  after_script:
#    - mv $input_dir/$output_dir .
  artifacts:
    paths:
#      - $output_dir
      - $input_dir
  #when: manual

NRPlot:
  extends: .plot
  needs:
    - job: NR_bb_tt_yy_com
    - job: NR_all_com
  script:
    - python plotting/xsection/combination_plotting.py nonres --logx -l $input_dir/limits/root-files/nonres/*/0.json $input_dir/limits/root-files/nonres/combined/A-*/0.json

#Spin0Plot:
#  extends: .plot
#  needs:
#    - job: Sp0_yy_tt_com
#    - job: Sp0_bb_tt_com
#    - job: Sp0_bb_tt_yy_com
#  script:
#    - python plotting/xsection/combination_plotting.py spin0  --logx --dat_list $input_dir/limits/root-files/spin0/bb*/*[0-9].json --com_list $input_dir/limits/root-files/spin0/combined/A-*-nocorr/*[0-9].json

Artifacts:
  stage: download
  variables:
    output_dir: output
  artifacts:
    paths:
      - $output_dir
