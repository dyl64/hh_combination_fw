stages:
  - build
  - process
  - combine
  - plotting
  - download

image: atlasadc/atlas-grid-centos7

hhCompile:
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    GIT_SSL_NO_VERIFY: "true"
  script:
    - set +e
    - shopt -s expand_aliases
    - export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase
    - alias setupATLAS='source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh'
    - base_path=$(pwd)
    - cd submodules/workspaceCombiner
    - git apply --whitespace=nowarn ../../workspaceCombiner.patch
    - git status
    - cd $base_path
    - source compile.sh
    - source setup.sh
  artifacts:
    paths:
      - submodules
      - python_modules
      - scripts
      - setup.sh

.IStep1:
  stage: process
  needs:
    - job: hhCompile
  variables:
    GIT_SSL_NO_VERIFY: "true"
    input_dir: input
  before_script:
    - set +e
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - eval "$(ssh-agent -s)"
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - echo "lxplus.cern.ch, ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPZvfRF+9L7TR3FRPyLFdcsXSZ6RQYJHfOjzzWB94sX0gP34Cgij9p4ukL900sVVvw3LPM5OxxFSNIXGztFYu4o=" > ~/.ssh/known_hosts
    - echo -e "Host *\n\tGSSAPIDelegateCredentials yes\n\tGSSAPITrustDNS yes\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - echo $SERVICE_PASS | kinit -f $CERN_USER || echo something
    - mkdir -p $input_dir/$version
    - scp -r -i ~/.ssh/id_rsa ${CERN_USER}@lxplus.cern.ch:/afs/cern.ch/work/z/zhangr/HHcomb/FullRun2Workspaces/original/$version/* $input_dir/$version/
    - ls $input_dir/$version/*/nonres/0.root
    - shopt -s expand_aliases
    - export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase
    - alias setupATLAS='source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh'
    - echo $input_dir/$version
    - source setup.sh || echo ignore setupATLAS return code
  artifacts:
    paths:
      - $output_dir

.IStep2:
  stage: combine
  variables:
    GIT_SSL_NO_VERIFY: "true"
    input_dir: output
  before_script:
    - set +e
    - shopt -s expand_aliases
    - export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase
    - alias setupATLAS='source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh'
    - source setup.sh || echo ignore setupATLAS return code
  artifacts:
    paths:
      - $input_dir

###################################
## Non-resonant Process channels ##
###################################
.NRProcess:
  extends: .IStep1
  variables:
    output_dir: output
    mini_option: minimizer_options_robust.json
    version: 20211029_mu
    other_options: ""
  allow_failure: true
  script:
    - echo HHComb process_channels -i $input_dir/$version -c $channel -r nonres -o $output_dir --minimizer_options configs/$mini_option --config configs/regularization_proj_v10.yaml $other_options
    - HHComb process_channels -i $input_dir/$version -c $channel -r nonres -o $output_dir --minimizer_options configs/$mini_option --config configs/regularization_proj_v10.yaml $other_options

NR_proj_mu_pro:
  extends: .NRProcess
  variables:
    output_dir: output
    channel: bbyy,bbtautau
  only:
    - branches
    - tags

NR_proj_pro_stat:
  extends: .NRProcess
  variables:
    output_dir: output_stat
    mini_option: minimizer_options_robust_stat.json
    channel: bbyy,bbtautau
  only:
    - tags
    - master
    - CI

KL_proj_pro_yy:
  extends: .NRProcess
  variables:
    output_dir: output
    channel: bbyy
    other_options: "--file_format <mass[F]>_kl_<kl[P]>"
  only:
    - tags
    - master
    - CI

KL_proj_pro_tt:
  extends: .NRProcess
  variables:
    output_dir: output
    channel: bbtautau
    other_options: "--file_format <mass[F]>_kl_<kl[P]>"
  only:
    - tags
    - master
    - CI

###################################
## None-resonant combination     ##
###################################
# Default is correlated (bbtautau and bbyy)
.NRCombine_ws:
  extends: .IStep2
  variables:
    mini_option: minimizer_options_robust.json
    np_option: np_map_nonres_v10.json
    other_options: ""
  allow_failure: true
  script:
    - echo HHComb combine_ws -i $input_dir -c $channels -r nonres --minimizer_options configs/$mini_option $other_options --scheme configs/$np_option
    - HHComb combine_ws -i $input_dir -c $channels -r nonres --minimizer_options configs/$mini_option $other_options --scheme configs/$np_option
  only:
    - tags
    - master
    - CI

# For PUB: mu limit
NR_proj_comb_mu:
  extends: .NRCombine_ws
  needs:
    - job: hhCompile
    - job: NR_proj_mu_pro
  variables:
    input_dir: output
    channels: bbtautau,bbyy

NR_proj_comb_stat:
  extends: .NRCombine_ws
  needs:
    - job: hhCompile
    - job: NR_proj_pro_stat
  variables:
    input_dir: output_stat
    channels: bbtautau,bbyy

# For PUB: KL xsec
KL_proj_comb:
  extends: .NRCombine_ws
  needs:
    - job: hhCompile
    - job: KL_proj_pro_yy
    - job: KL_proj_pro_tt
  variables:
    input_dir: output
    channels: bbtautau,bbyy
    np_option: np_map_kl_v10.json
    other_options: "--file_format <mass[F]>_kl_<kl[P]>"


###################################
## Plotting                      ##
###################################
.plot:
  stage: plotting
  variables:
    GIT_SSL_NO_VERIFY: "true"
    input_dir: output
    output_dir: figures
  before_script:
    - set +e
    - shopt -s expand_aliases
    - export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase
    - alias setupATLAS='source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh'
    - source setup.sh || echo ignore setupATLAS return code
  allow_failure: true
  artifacts:
    paths:
      - $input_dir/$output_dir
  only:
    - tags
    - master
    - CI

NRPlot:
  extends: .plot
  needs:
    - job: NR_proj_comb_mu
    - job: NR_proj_comb_stat
  variables:
    input_stat_dir: output_stat
  script:
    # Plot nonres signal strength (mu)
    - echo python plotting/xsection/combination_plotting.py nonres --logx -l $input_dir/limits/nonres/*/0.json $input_dir/limits/nonres/combined/A-*-fullcorr/0.json -s $input_stat_dir/limits/nonres/bb[ty]*/0.json $input_stat_dir/limits/nonres/combined/A-*-fullcorr/0.json -mu
    - python plotting/xsection/combination_plotting.py nonres --logx -l $input_dir/limits/nonres/*/0.json $input_dir/limits/nonres/combined/A-*-fullcorr/0.json -s $input_stat_dir/limits/nonres/bb[ty]*/0.json $input_stat_dir/limits/nonres/combined/A-*-fullcorr/0.json -mu

  artifacts:
    paths:
      - $input_dir/$output_dir

KLPlot:
  extends: .plot
  needs:
    - job: KL_proj_comb
  script:
    # Plot KL
    - echo python plotting/kl_scan/plot_kl.py -i $input_dir -ci
    - python plotting/kl_scan/plot_kl.py -i $input_dir -ci
  artifacts:
    paths:
      - $input_dir/$output_dir

###################################
## kl workspace combine          ##
###################################
WorkspaceProcess:
  extends: .IStep1
  needs:
    - job: hhCompile
  variables:
    output_dir: output
    mini_option: minimizer_options_robust.json
    version: 20211029_mu
    channel: bbtautau,bbyy
    other_options: "--file_format <mass[F]>_kl"
    np_option: np_map_kl_v10.json
  allow_failure: true
  script:
    - echo HHComb process_channels -i $input_dir/$version -c $channel -r nonres -o $output_dir --minimizer_options configs/$mini_option --config configs/regularization_kl.yaml --skip-limit --no-cache $other_options
    - HHComb process_channels -i $input_dir/$version -c $channel -r nonres -o $output_dir --minimizer_options configs/$mini_option --config configs/regularization_kl.yaml --skip-limit --no-cache $other_options
    - echo HHComb combine_ws -i $output_dir -r nonres -c $channel --minimizer_options configs/$mini_option --config configs/regularization_kl.yaml --scheme configs/$np_option --skip-limit --no-cache $other_options
    - HHComb combine_ws -i $output_dir -r nonres -c $channel --minimizer_options configs/$mini_option --config configs/regularization_kl.yaml --scheme configs/$np_option --skip-limit --no-cache $other_options


WorkspaceLikelihood:
  extends: .IStep2
  needs:
    - job: hhCompile
    - job: WorkspaceProcess
  variables:
    output_dir: output
  allow_failure: true
  script:
    - echo HHComb kl_likelihood -i $output_dir -c bbyy,bbtautau --min -2 --max 10 --step 0.2
    - HHComb kl_likelihood -i $output_dir -c bbyy,bbtautau --min -2 --max 10 --step 0.2
  only:
    - tags
    - master
    - CI

#####################################
## Intermediate output to download ##
#####################################
Artifacts:
  stage: download
  variables:
    GIT_SSL_NO_VERIFY: "true"
    output: output
    output_stat_dir: output_stat
  allow_failure: true
  script:
    - ls
  only:
    - tags
    - master
    - CI
  artifacts:
    paths:
      - $output
      - $output_stat_dir
