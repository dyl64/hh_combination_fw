diff --git a/app/manager.cxx b/app/manager.cxx
index 735a2e4..1556bf1 100644
--- a/app/manager.cxx
+++ b/app/manager.cxx
@@ -26,7 +26,7 @@ std::string injectDataSet_ = "asimovData_1"; // To be moved to workspace editing
 std::string replaceStr_ = "";		     // To be moved to workspace editing
 std::string usePseudoData_ = "";	     // To be moved to workspace editing
 std::string dataName_ = "obsData";	     // To be moved to XML file
-std::string wsName_ = "combWS";		     // To be moved to XML file
+std::string wsName_ = "";		     // To be moved to XML file
 std::string mcName_ = "ModelConfig";	     // To be moved to XML file
 
 double rMax_ = -999;		// To be moved to XML file
@@ -47,6 +47,7 @@ struct option longopts[] = {
   { "ConfigXml", required_argument, NULL, 'x'},
   { "CombinedFile", required_argument, NULL, 'f'},
   { "SplittedFile", required_argument, NULL, 'p'},
+  { "dataset", required_argument, NULL, 'd'},
   { "minimizerAlgo", required_argument, NULL, 'm'},
   { "minimizerStrategy", required_argument, NULL, 's'},
   { "minimizerTolerance", required_argument, NULL, 't'},
@@ -66,6 +67,7 @@ void printHelp(TString exe){
   cout<<" -x [ --ConfigXml ] arg             Input XML configure file"<<endl;
   cout<<" -f [ --CombinedFile ] arg          Input workspace file"<<endl;
   cout<<" -p [ --SplittedFile ] arg          Output workspace file"<<endl;
+  cout<<" -d [ --dataset ] arg               Dataset name"<<endl;  
   cout<<" -v [ --verbose ] arg               Printing out debug info or not (default no)"<<endl;
   cout<<" -i [ --indices ] arg               Category indices to be included in the split file"<<endl;
   cout<<" -m [ --minimizerAlgo ] arg         Minimizer algorithm (default Minuit2)"<<endl;
@@ -88,7 +90,7 @@ int main( int argc, char** argv )
   RooMsgService::instance().setGlobalKillBelow(RooFit::ERROR);
 
   int oc;
-  while ((oc=getopt_long(argc, argv, ":w:x:f:p:i:v:m:s:t:n:c:r:h", longopts, NULL)) != -1){
+  while ((oc=getopt_long(argc, argv, ":w:x:f:p:d:i:v:m:s:t:n:c:r:h", longopts, NULL)) != -1){
     switch (oc) {
     case 'w':
       what_ = optarg;
@@ -102,6 +104,9 @@ int main( int argc, char** argv )
     case 'p':
       splittedFile_ = optarg;
       break;
+    case 'd':
+      dataName_ = optarg;
+      break;
     case 'i':
       indice_ = optarg;
       break;
diff --git a/src/combiner.cxx b/src/combiner.cxx
index 691e7a1..b0dcd86 100644
--- a/src/combiner.cxx
+++ b/src/combiner.cxx
@@ -690,8 +690,10 @@ void combiner::makeSimCategory()
 	{
 	  std::cout << "\tsub-index --> " << i << std::endl;
 	  indivCat->setBin( i );
-	  RooDataSet* datai = ( RooDataSet* )( indivDataList->At( i ) );
-	  RooAbsPdf* pdfi = indivPdf->getPdf( indivCat->getLabel() );
+
+      TString channelname=indivCat->getLabel();
+	  RooDataSet* datai = ( RooDataSet* )( indivDataList->FindObject(channelname) );
+	  RooAbsPdf* pdfi = indivPdf->getPdf( channelname );
 
 	  /* in case combining the same channel, it's good to differentiate them */
 	  if ( !TString(datai->GetName()).EndsWith(channelName.c_str()) ) {
@@ -854,8 +856,9 @@ void combiner::makeSimCategory()
 	  for ( int i = 0; i < n; ++i )
 	    {
 	      indivCat->setBin( i );
-	      RooAbsPdf* pdfi = indivPdf->getPdf( indivCat->getLabel() );
-	      RooDataSet* datai = ( RooDataSet* )( indivDataList->At( i ) );
+          TString channelname=indivCat->getLabel();
+	      RooAbsPdf* pdfi = indivPdf->getPdf( channelname );
+	      RooDataSet* datai = ( RooDataSet* )( indivDataList->FindObject(channelname) );
 
 	      TString type = Form( "%s_%s_%s", m_catName.c_str(), indivCat->getLabel(), channelName.c_str() );
 	      m_cat->setLabel( type, true ); // print error
diff --git a/src/decorator.cxx b/src/decorator.cxx
index ce1e686..8050b0d 100644
--- a/src/decorator.cxx
+++ b/src/decorator.cxx
@@ -76,8 +76,13 @@ decorator::decorator(std::string combinedFile, std::string splittedFile, std::st
   if(!m_data){
     std::cerr<<"Warning! Dataset "<<dataName.c_str()<<" cannot be found in the workspace."<<std::endl
 	     <<"Will try other dataset names. Press any key to continue..."<<std::endl;
-    getchar();
-    m_data = (RooDataSet*)(m_comb->allData().front());
+    //getchar();
+    m_data = (RooDataSet*)(m_comb->data("combData"));
+    if(!m_data){
+        m_data = (RooDataSet*)(m_comb->allData().front());
+        std::cerr<<"Warning! Dataset combData cannot be found in the workspace. Use whatever the first Dataset."<<std::endl;
+        //abort();
+    }
   }
 
   m_dataList = m_data->split( *m_cat, true );
@@ -127,6 +132,13 @@ void decorator::decorate()
     }
   }
   else{
+      if ((std::string) m_data->GetName() != "combData"){
+          RooDataSet* buffer_data = (RooDataSet*)(m_comb->data("combData"));
+          if (buffer_data){
+              buffer_data->SetName("combData_old");
+              std::cout<<"Found dataset with name combData, renamed to combData_old to avoid conflicts"<<std::endl;
+          }
+      }
     std::cout<<"Dataset: old name "<<m_data->GetName()<<", new name combData"<<std::endl;
     m_data->SetName("combData");
   }
@@ -234,8 +246,8 @@ void decorator::hist2dataset()
   for ( int ich= 0; ich < numChannels; ich++ ) {
     m_cat->setBin(ich);
     TString channelname=m_cat->getLabel();
-    RooAbsPdf* pdfi = m_pdf->getPdf(m_cat->getLabel());
-    RooAbsData* datai = ( RooAbsData* )( m_dataList->At( ich ) );
+    RooAbsPdf* pdfi = m_pdf->getPdf(channelname);
+    RooAbsData* datai = ( RooAbsData* )( m_dataList->FindObject( channelname ) );
     RooRealVar *obsi=(RooRealVar*)pdfi->getObservables(datai)->first();
     x[ich]=m_comb->var(obsi->GetName());
     w[ich]=new RooRealVar(Form("wt_%d",ich),Form("wt_%d",ich),1);
@@ -279,8 +291,9 @@ void decorator::printSummary(bool verbose)
   std::cout << "\tThere are " << numChannels << " sub channels:" << std::endl;
   for ( int i= 0; i < numChannels; i++ ) {
     m_cat->setBin(i);
-    RooAbsPdf* pdfi = m_pdf->getPdf(m_cat->getLabel());
-    RooDataSet* datai = ( RooDataSet* )( m_dataList->At( i ) );
+    TString channelname=m_cat->getLabel();
+    RooAbsPdf* pdfi = m_pdf->getPdf(channelname);
+    RooDataSet* datai = ( RooDataSet* )( m_dataList->FindObject( channelname ) );
     std::cout << "\t\tIndex: " << i << ", Pdf: " << pdfi->GetName() << ", Data: " << datai->GetName()  << ", SumEntries: " << datai->sumEntries() << std::endl;
     // std::cout << "\t\tIndex: " << i << ", Pdf: " << pdfi->GetName() << ", Data: " << pdfi->ClassName()  << ", SumEntries: " << datai->sumEntries() << std::endl;
   }
diff --git a/src/splitter.cxx b/src/splitter.cxx
index 14c4655..e1f57f0 100644
--- a/src/splitter.cxx
+++ b/src/splitter.cxx
@@ -178,8 +178,9 @@ void splitter::printSummary(bool verbose)
   std::cout << "\tThere are " << numChannels << " sub channels:" << std::endl;
   for ( int i= 0; i < numChannels; i++ ) {
     m_cat->setBin(i);
-    RooAbsPdf* pdfi = m_pdf->getPdf(m_cat->getLabel());
-    RooDataSet* datai = ( RooDataSet* )( m_dataList->At( i ) );
+    TString channelname=m_cat->getLabel();
+    RooAbsPdf* pdfi = m_pdf->getPdf(channelname);
+    RooDataSet* datai = ( RooDataSet* )( m_dataList->FindObject( channelname ) );
     std::cout << "\t\tIndex: " << i << ", Pdf: " << pdfi->GetName() << ", Data: " << datai->GetName()  << ", SumEntries: " << datai->sumEntries() << std::endl;
     // std::cout << "\t\tIndex: " << i << ", Pdf: " << pdfi->GetName() << ", Data: " << pdfi->ClassName()  << ", SumEntries: " << datai->sumEntries() << std::endl;
   }
@@ -287,8 +288,9 @@ void splitter::makeWorkspace(double rMax_, int reBin, double mass, bool editRFV)
     index = m_useIndice[i];
     std::cout << "\tsub-index --> " << index << std::endl;
     m_cat->setBin( index );
-    RooAbsPdf* pdfi = m_pdf->getPdf( m_cat->getLabel() );
-    RooDataSet* datai = ( RooDataSet* )( m_dataList->At( i ) );
+    TString channelname=m_cat->getLabel();
+    RooAbsPdf* pdfi = m_pdf->getPdf( channelname );
+    RooDataSet* datai = ( RooDataSet* )( m_dataList->FindObject( channelname ) );
     /* make category */
     // TString type = Form( "subCat_%s", m_cat->getLabel() );
     TString type = m_cat->getLabel();
@@ -735,7 +737,8 @@ void splitter::makeWorkspace(double rMax_, int reBin, double mass, bool editRFV)
     {
       index = m_useIndice[i];
       m_cat->setBin( index );
-      RooDataSet* datai = ( RooDataSet* )( m_dataList->At( index ) );
+      TString channelname = m_cat->getLabel();
+      RooDataSet* datai = ( RooDataSet* )( m_dataList->FindObject( channelname ) );
       // TString type = Form( "subCat_%s", m_cat->getLabel() );
       TString type = m_cat->getLabel();
       m_subCat->setLabel( type, true ); // print error
@@ -768,9 +771,10 @@ void splitter::makeWorkspace(double rMax_, int reBin, double mass, bool editRFV)
     for ( int i= 0; i < useNumChannels; i++ ) {
       index = m_useIndice[i];
       m_cat->setBin(index);
-      RooAbsPdf* pdfi = m_pdf->getPdf(m_cat->getLabel());
+      TString channelname = m_cat->getLabel();
+      RooAbsPdf* pdfi = m_pdf->getPdf(channelname);
 
-      RooDataSet* datai = ( RooDataSet* )( m_dataList->At( index ) );
+      RooDataSet* datai = ( RooDataSet* )( m_dataList->FindObject( channelname ) );
 
       int numEntries = datai->numEntries();
       int sumEntries = datai->sumEntries();
@@ -1256,7 +1260,7 @@ void splitter::makeInjection(
   for ( int i= 0; i < num; i++ ) {
     std::cout << "\tsub-index --> " << i << std::endl;
     m_subCat->setBin( i );
-    RooDataSet* tmpData = ( RooDataSet* )( injectingDataList->At( i ) );
+    RooDataSet* tmpData = ( RooDataSet* )( injectingDataList->FindObject( m_subCat->getLabel() ) );
     std::cout << "\t\tsub-data --> " << tmpData->GetName() << std::endl;
     /* may not have them */
     RooDataSet* tmpInjectB = ( RooDataSet* )(injectBDataList->FindObject(tmpData->GetName()));
@@ -1281,8 +1285,8 @@ void splitter::makeInjection(
           dataName.find("_hh_") != std::string::npos
          )
       {
-        tmpInjectB = (RooDataSet*) injectBDataList->At(i);
-        tmpInjectSB = (RooDataSet*) injectSBDataList->At(i);
+        tmpInjectB = (RooDataSet*) injectBDataList->FindObject( m_subCat->getLabel() );
+        tmpInjectSB = (RooDataSet*) injectSBDataList->FindObject( m_subCat->getLabel() );
         hasInjection = true;
         std::cout << "\t\tFound injection from " << tmpInjectB->GetName() << std::endl;
       }
